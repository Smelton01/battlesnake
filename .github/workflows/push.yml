name: Deploy to staging

permissions:
  id-token: write
  contents: read
  issues: write

env:
  AWS_DEFAULT_REGION: ap-northeast-1
  TF_ROLE: arn:aws:iam::998684527758:role/snek-stg-terraform-role
  GO_VERSION: 1.19.3

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test
        run: go test ./... -coverprofile=coverage.out -covermode=count

      - name: Generate coverage HTML
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Upload raw test coverage data
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          path: ./coverage.out

      - name: Upload test coverage html
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          path: ./coverage.html

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ env.TF_ROLE }}

      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            IMG_ARCH=arm64
            GO_ARCH_ARG=arm64
            GO_VERSION_ARG=${{ env.GO_VERSION }}
          push: true
          platforms: linux/arm64
          tags: |
            ${{ steps.ecr-login.outputs.registry}}/snek-stg-app:${{ github.sha }}
            ${{ steps.ecr-login.outputs.registry}}/snek-stg-app:latest
  apply-terraform:
    name: Apply terraform using stg-role
    runs-on: ubuntu-latest
    env:
      tf_dir: ./tf/environments/stg
    needs:
      - build
      - test
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.4

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ env.TF_ROLE }}

      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Terraform init
        id: init
        working-directory: ${{ env.tf_dir }}
        run: terraform init

      - name: Terraform validate
        id: validate
        working-directory: ${{ env.tf_dir }}
        run: terraform validate

      - name: Terraform plan
        id: plan
        working-directory: ${{ env.tf_dir }}
        run: terraform plan -no-color -input=false

      - name: Run TF Apply
        working-directory: ${{ env.tf_dir }}
        env:
          TF_VAR_snek_image_tag: ${{ github.sha }}
        run: terraform apply -auto-approve
